services:
  event-command-db:
    image: mysql:8.0.31-debian
    container_name: event-command-service-db
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./event/event-command-service/src/main/resources/sql/:/docker-entrypoint-initdb.d/
    ports:
      - "${EVENT_COMMAND_DB}:3306"
  event-query-db:
    image: mysql:8.0.31-debian
    container_name: event-query-service-db
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./event/event-query-service/src/main/resources/sql/:/docker-entrypoint-initdb.d/
    ports:
      - "${EVENT_QUERY_DB}:3306"
  user-db:
    image: mysql:8.0.31-debian
    container_name: user-service-db
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./user/user-service/src/main/resources/sql/:/docker-entrypoint-initdb.d/
    ports:
      - "${USER_DB}:3306"
  notification-db:
    image: mysql:8.0.31-debian
    container_name: notification-service-db
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./notification/notification-service/src/main/resources/sql/:/docker-entrypoint-initdb.d/
    ports:
      - "${NOTIFICATION_DB}:3306"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${ZOOKEEPER_CLIENT_PORT}:2181"

  message-broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: message-broker
    ports:
      - ${BROKER_EXTERNAL_PORT}:29092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://message-broker:${BROKER_INTERNAL_PORT},PLAINTEXT_HOST://localhost:${BROKER_EXTERNAL_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: broker-ui
    ports:
      - "${KAFKA_UI_PORT}:8080"
    depends_on:
      - zookeeper
      - message-broker
    environment:
      KAFKA_CLUSTERS_0_NAME: primary #default cluster name
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'message-broker:${BROKER_INTERNAL_PORT}'
      KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:${ZOOKEEPER_CLIENT_PORT}'